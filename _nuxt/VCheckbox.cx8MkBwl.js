import{m as A,V as t}from"./VCheckboxBtn.adQJ5cgH.js";import{d as F,e as I,f as l}from"./VRow.BQodIuk0.js";import{s as B,G as U,x as M,J as R,a1 as D,C as G,a7 as J,b as r,M as u}from"./entry.7MwUyWK9.js";import{g as N}from"./VGrid.0XN4DNhA.js";const $=B({...F(),...U(A(),["inline"])},"VCheckbox"),E=M()({name:"VCheckbox",inheritAttrs:!1,props:$(),emits:{"update:modelValue":e=>!0,"update:focused":e=>!0},setup(e,d){let{attrs:c,slots:a}=d;const s=R(e,"modelValue"),{isFocused:n,focus:i,blur:m}=I(e),V=D(),p=G(()=>e.id||"checkbox-".concat(V));return N(()=>{const[b,f]=J(c),v=l.filterProps(e),k=t.filterProps(e);return r(l,u({class:["v-checkbox",e.class]},b,v,{modelValue:s.value,"onUpdate:modelValue":o=>s.value=o,id:p.value,focused:n.value,style:e.style}),{...a,default:o=>{let{id:x,messagesId:h,isDisabled:P,isReadonly:C,isValid:y}=o;return r(t,u(k,{id:x.value,"aria-describedby":h.value,disabled:P.value,readonly:C.value},f,{error:y.value===!1,modelValue:s.value,"onUpdate:modelValue":g=>s.value=g,onFocus:i,onBlur:m}),a)}})}),{}}});export{E as V};
